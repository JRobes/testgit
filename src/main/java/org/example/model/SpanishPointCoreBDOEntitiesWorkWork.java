/*
 * API
 * Matching Engine Web Rules API
 *
 * OpenAPI spec version: v1
 * Contact: support@spanishpoint.ie
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.example.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * SpanishPointCoreBDOEntitiesWorkWork
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-04T19:50:41.548694176+02:00[Europe/Madrid]")

public class SpanishPointCoreBDOEntitiesWorkWork {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("subSource")
  private String subSource = null;

  @SerializedName("standardizedTitle")
  private String standardizedTitle = null;

  @SerializedName("titles")
  private List<SpanishPointCoreBDOEntitiesWorkName> titles = null;

  @SerializedName("contributors")
  private List<SpanishPointCoreBDOEntitiesWorkWorkContributor> contributors = null;

  @SerializedName("artists")
  private List<SpanishPointCoreBDOEntitiesWorkPerformer> artists = null;

  @SerializedName("numbers")
  private List<SpanishPointCoreBDOEntitiesWorkWorkNumber> numbers = null;

  @SerializedName("disambiguateFromNumbers")
  private List<SpanishPointCoreBDOEntitiesWorkWorkNumber> disambiguateFromNumbers = null;

  @SerializedName("notes")
  private List<SpanishPointCoreBDOEntitiesWorkWorkNote> notes = null;

  @SerializedName("territorySpecificInfo")
  private List<SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo> territorySpecificInfo = null;

  @SerializedName("skipContributorCountRules")
  private Boolean skipContributorCountRules = null;

  @SerializedName("excludeMatchesOTBelowSimilarity")
  private Boolean excludeMatchesOTBelowSimilarity = null;

  @SerializedName("excludeInEligibleWorks")
  private Boolean excludeInEligibleWorks = null;

  @SerializedName("workBatchID")
  private Long workBatchID = null;

  @SerializedName("stampID")
  private String stampID = null;

  @SerializedName("isDramaticoMusical")
  private Boolean isDramaticoMusical = null;

  @SerializedName("medleyCount")
  private Integer medleyCount = null;

  @SerializedName("dateCreated")
  private String dateCreated = null;

  @SerializedName("lastModifiedDate")
  private String lastModifiedDate = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("draftSubmitted")
  private Boolean draftSubmitted = null;

  @SerializedName("isAdUse")
  private Boolean isAdUse = null;

  @SerializedName("isMaintained")
  private Boolean isMaintained = null;

  @SerializedName("isDistribution")
  private Boolean isDistribution = null;

  @SerializedName("isOriginalWork")
  private Boolean isOriginalWork = null;

  @SerializedName("sourceSociety")
  private String sourceSociety = null;

  @SerializedName("genreCode")
  private String genreCode = null;

  @SerializedName("musicArrangement")
  private String musicArrangement = null;

  @SerializedName("lyricAdaptation")
  private String lyricAdaptation = null;

  @SerializedName("distributionCategoryCode")
  private String distributionCategoryCode = null;

  @SerializedName("isGrandRights")
  private Boolean isGrandRights = null;

  @SerializedName("isLibraryWork")
  private Boolean isLibraryWork = null;

  @SerializedName("isCommissionedForCommercial")
  private Boolean isCommissionedForCommercial = null;

  @SerializedName("isFilmTVCommissioned")
  private Boolean isFilmTVCommissioned = null;

  @SerializedName("medleyType")
  private String medleyType = null;

  @SerializedName("isRemix")
  private Boolean isRemix = null;

  @SerializedName("sourceIP")
  private Long sourceIP = null;

  @SerializedName("sourceType")
  private String sourceType = null;

  @SerializedName("originalWorkNumber")
  private AllOfSpanishPointCoreBDOEntitiesWorkWorkOriginalWorkNumber originalWorkNumber = null;

  @SerializedName("instrumentation")
  private List<SpanishPointCoreBDOEntitiesWorkWorkInstrumentation> instrumentation = null;

  @SerializedName("hasOpenWorkflow")
  private Boolean hasOpenWorkflow = null;

  @SerializedName("independentWorkNumberMatch")
  private Boolean independentWorkNumberMatch = null;

  @SerializedName("skipStandardizedTitleSearch")
  private Boolean skipStandardizedTitleSearch = null;

  @SerializedName("workSourceIP")
  private AllOfSpanishPointCoreBDOEntitiesWorkWorkWorkSourceIP workSourceIP = null;

  @SerializedName("error")
  private String error = null;

  public SpanishPointCoreBDOEntitiesWorkWork id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SpanishPointCoreBDOEntitiesWorkWork source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public SpanishPointCoreBDOEntitiesWorkWork subSource(String subSource) {
    this.subSource = subSource;
    return this;
  }

   /**
   * Get subSource
   * @return subSource
  **/
  @Schema(description = "")
  public String getSubSource() {
    return subSource;
  }

  public void setSubSource(String subSource) {
    this.subSource = subSource;
  }

  public SpanishPointCoreBDOEntitiesWorkWork standardizedTitle(String standardizedTitle) {
    this.standardizedTitle = standardizedTitle;
    return this;
  }

   /**
   * Get standardizedTitle
   * @return standardizedTitle
  **/
  @Schema(description = "")
  public String getStandardizedTitle() {
    return standardizedTitle;
  }

  public void setStandardizedTitle(String standardizedTitle) {
    this.standardizedTitle = standardizedTitle;
  }

  public SpanishPointCoreBDOEntitiesWorkWork titles(List<SpanishPointCoreBDOEntitiesWorkName> titles) {
    this.titles = titles;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addTitlesItem(SpanishPointCoreBDOEntitiesWorkName titlesItem) {
    if (this.titles == null) {
      this.titles = new ArrayList<SpanishPointCoreBDOEntitiesWorkName>();
    }
    this.titles.add(titlesItem);
    return this;
  }

   /**
   * Get titles
   * @return titles
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkName> getTitles() {
    return titles;
  }

  public void setTitles(List<SpanishPointCoreBDOEntitiesWorkName> titles) {
    this.titles = titles;
  }

  public SpanishPointCoreBDOEntitiesWorkWork contributors(List<SpanishPointCoreBDOEntitiesWorkWorkContributor> contributors) {
    this.contributors = contributors;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addContributorsItem(SpanishPointCoreBDOEntitiesWorkWorkContributor contributorsItem) {
    if (this.contributors == null) {
      this.contributors = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkContributor>();
    }
    this.contributors.add(contributorsItem);
    return this;
  }

   /**
   * Get contributors
   * @return contributors
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkContributor> getContributors() {
    return contributors;
  }

  public void setContributors(List<SpanishPointCoreBDOEntitiesWorkWorkContributor> contributors) {
    this.contributors = contributors;
  }

  public SpanishPointCoreBDOEntitiesWorkWork artists(List<SpanishPointCoreBDOEntitiesWorkPerformer> artists) {
    this.artists = artists;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addArtistsItem(SpanishPointCoreBDOEntitiesWorkPerformer artistsItem) {
    if (this.artists == null) {
      this.artists = new ArrayList<SpanishPointCoreBDOEntitiesWorkPerformer>();
    }
    this.artists.add(artistsItem);
    return this;
  }

   /**
   * Get artists
   * @return artists
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkPerformer> getArtists() {
    return artists;
  }

  public void setArtists(List<SpanishPointCoreBDOEntitiesWorkPerformer> artists) {
    this.artists = artists;
  }

  public SpanishPointCoreBDOEntitiesWorkWork numbers(List<SpanishPointCoreBDOEntitiesWorkWorkNumber> numbers) {
    this.numbers = numbers;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addNumbersItem(SpanishPointCoreBDOEntitiesWorkWorkNumber numbersItem) {
    if (this.numbers == null) {
      this.numbers = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkNumber>();
    }
    this.numbers.add(numbersItem);
    return this;
  }

   /**
   * Get numbers
   * @return numbers
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkNumber> getNumbers() {
    return numbers;
  }

  public void setNumbers(List<SpanishPointCoreBDOEntitiesWorkWorkNumber> numbers) {
    this.numbers = numbers;
  }

  public SpanishPointCoreBDOEntitiesWorkWork disambiguateFromNumbers(List<SpanishPointCoreBDOEntitiesWorkWorkNumber> disambiguateFromNumbers) {
    this.disambiguateFromNumbers = disambiguateFromNumbers;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addDisambiguateFromNumbersItem(SpanishPointCoreBDOEntitiesWorkWorkNumber disambiguateFromNumbersItem) {
    if (this.disambiguateFromNumbers == null) {
      this.disambiguateFromNumbers = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkNumber>();
    }
    this.disambiguateFromNumbers.add(disambiguateFromNumbersItem);
    return this;
  }

   /**
   * Get disambiguateFromNumbers
   * @return disambiguateFromNumbers
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkNumber> getDisambiguateFromNumbers() {
    return disambiguateFromNumbers;
  }

  public void setDisambiguateFromNumbers(List<SpanishPointCoreBDOEntitiesWorkWorkNumber> disambiguateFromNumbers) {
    this.disambiguateFromNumbers = disambiguateFromNumbers;
  }

  public SpanishPointCoreBDOEntitiesWorkWork notes(List<SpanishPointCoreBDOEntitiesWorkWorkNote> notes) {
    this.notes = notes;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addNotesItem(SpanishPointCoreBDOEntitiesWorkWorkNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkNote>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkNote> getNotes() {
    return notes;
  }

  public void setNotes(List<SpanishPointCoreBDOEntitiesWorkWorkNote> notes) {
    this.notes = notes;
  }

  public SpanishPointCoreBDOEntitiesWorkWork territorySpecificInfo(List<SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo> territorySpecificInfo) {
    this.territorySpecificInfo = territorySpecificInfo;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addTerritorySpecificInfoItem(SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo territorySpecificInfoItem) {
    if (this.territorySpecificInfo == null) {
      this.territorySpecificInfo = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo>();
    }
    this.territorySpecificInfo.add(territorySpecificInfoItem);
    return this;
  }

   /**
   * Get territorySpecificInfo
   * @return territorySpecificInfo
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo> getTerritorySpecificInfo() {
    return territorySpecificInfo;
  }

  public void setTerritorySpecificInfo(List<SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo> territorySpecificInfo) {
    this.territorySpecificInfo = territorySpecificInfo;
  }

  public SpanishPointCoreBDOEntitiesWorkWork skipContributorCountRules(Boolean skipContributorCountRules) {
    this.skipContributorCountRules = skipContributorCountRules;
    return this;
  }

   /**
   * Get skipContributorCountRules
   * @return skipContributorCountRules
  **/
  @Schema(description = "")
  public Boolean isSkipContributorCountRules() {
    return skipContributorCountRules;
  }

  public void setSkipContributorCountRules(Boolean skipContributorCountRules) {
    this.skipContributorCountRules = skipContributorCountRules;
  }

  public SpanishPointCoreBDOEntitiesWorkWork excludeMatchesOTBelowSimilarity(Boolean excludeMatchesOTBelowSimilarity) {
    this.excludeMatchesOTBelowSimilarity = excludeMatchesOTBelowSimilarity;
    return this;
  }

   /**
   * Get excludeMatchesOTBelowSimilarity
   * @return excludeMatchesOTBelowSimilarity
  **/
  @Schema(description = "")
  public Boolean isExcludeMatchesOTBelowSimilarity() {
    return excludeMatchesOTBelowSimilarity;
  }

  public void setExcludeMatchesOTBelowSimilarity(Boolean excludeMatchesOTBelowSimilarity) {
    this.excludeMatchesOTBelowSimilarity = excludeMatchesOTBelowSimilarity;
  }

  public SpanishPointCoreBDOEntitiesWorkWork excludeInEligibleWorks(Boolean excludeInEligibleWorks) {
    this.excludeInEligibleWorks = excludeInEligibleWorks;
    return this;
  }

   /**
   * Get excludeInEligibleWorks
   * @return excludeInEligibleWorks
  **/
  @Schema(description = "")
  public Boolean isExcludeInEligibleWorks() {
    return excludeInEligibleWorks;
  }

  public void setExcludeInEligibleWorks(Boolean excludeInEligibleWorks) {
    this.excludeInEligibleWorks = excludeInEligibleWorks;
  }

  public SpanishPointCoreBDOEntitiesWorkWork workBatchID(Long workBatchID) {
    this.workBatchID = workBatchID;
    return this;
  }

   /**
   * Get workBatchID
   * @return workBatchID
  **/
  @Schema(description = "")
  public Long getWorkBatchID() {
    return workBatchID;
  }

  public void setWorkBatchID(Long workBatchID) {
    this.workBatchID = workBatchID;
  }

  public SpanishPointCoreBDOEntitiesWorkWork stampID(String stampID) {
    this.stampID = stampID;
    return this;
  }

   /**
   * Get stampID
   * @return stampID
  **/
  @Schema(description = "")
  public String getStampID() {
    return stampID;
  }

  public void setStampID(String stampID) {
    this.stampID = stampID;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isDramaticoMusical(Boolean isDramaticoMusical) {
    this.isDramaticoMusical = isDramaticoMusical;
    return this;
  }

   /**
   * Get isDramaticoMusical
   * @return isDramaticoMusical
  **/
  @Schema(description = "")
  public Boolean isIsDramaticoMusical() {
    return isDramaticoMusical;
  }

  public void setIsDramaticoMusical(Boolean isDramaticoMusical) {
    this.isDramaticoMusical = isDramaticoMusical;
  }

  public SpanishPointCoreBDOEntitiesWorkWork medleyCount(Integer medleyCount) {
    this.medleyCount = medleyCount;
    return this;
  }

   /**
   * Get medleyCount
   * @return medleyCount
  **/
  @Schema(description = "")
  public Integer getMedleyCount() {
    return medleyCount;
  }

  public void setMedleyCount(Integer medleyCount) {
    this.medleyCount = medleyCount;
  }

  public SpanishPointCoreBDOEntitiesWorkWork dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @Schema(description = "")
  public String  getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  public SpanishPointCoreBDOEntitiesWorkWork lastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * Get lastModifiedDate
   * @return lastModifiedDate
  **/
  @Schema(description = "")
  public String getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }

  public SpanishPointCoreBDOEntitiesWorkWork duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public SpanishPointCoreBDOEntitiesWorkWork draftSubmitted(Boolean draftSubmitted) {
    this.draftSubmitted = draftSubmitted;
    return this;
  }

   /**
   * Get draftSubmitted
   * @return draftSubmitted
  **/
  @Schema(description = "")
  public Boolean isDraftSubmitted() {
    return draftSubmitted;
  }

  public void setDraftSubmitted(Boolean draftSubmitted) {
    this.draftSubmitted = draftSubmitted;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isAdUse(Boolean isAdUse) {
    this.isAdUse = isAdUse;
    return this;
  }

   /**
   * Get isAdUse
   * @return isAdUse
  **/
  @Schema(description = "")
  public Boolean isIsAdUse() {
    return isAdUse;
  }

  public void setIsAdUse(Boolean isAdUse) {
    this.isAdUse = isAdUse;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isMaintained(Boolean isMaintained) {
    this.isMaintained = isMaintained;
    return this;
  }

   /**
   * Get isMaintained
   * @return isMaintained
  **/
  @Schema(description = "")
  public Boolean isIsMaintained() {
    return isMaintained;
  }

  public void setIsMaintained(Boolean isMaintained) {
    this.isMaintained = isMaintained;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isDistribution(Boolean isDistribution) {
    this.isDistribution = isDistribution;
    return this;
  }

   /**
   * Get isDistribution
   * @return isDistribution
  **/
  @Schema(description = "")
  public Boolean isIsDistribution() {
    return isDistribution;
  }

  public void setIsDistribution(Boolean isDistribution) {
    this.isDistribution = isDistribution;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isOriginalWork(Boolean isOriginalWork) {
    this.isOriginalWork = isOriginalWork;
    return this;
  }

   /**
   * Get isOriginalWork
   * @return isOriginalWork
  **/
  @Schema(description = "")
  public Boolean isIsOriginalWork() {
    return isOriginalWork;
  }

  public void setIsOriginalWork(Boolean isOriginalWork) {
    this.isOriginalWork = isOriginalWork;
  }

  public SpanishPointCoreBDOEntitiesWorkWork sourceSociety(String sourceSociety) {
    this.sourceSociety = sourceSociety;
    return this;
  }

   /**
   * Get sourceSociety
   * @return sourceSociety
  **/
  @Schema(description = "")
  public String getSourceSociety() {
    return sourceSociety;
  }

  public void setSourceSociety(String sourceSociety) {
    this.sourceSociety = sourceSociety;
  }

  public SpanishPointCoreBDOEntitiesWorkWork genreCode(String genreCode) {
    this.genreCode = genreCode;
    return this;
  }

   /**
   * Get genreCode
   * @return genreCode
  **/
  @Schema(description = "")
  public String getGenreCode() {
    return genreCode;
  }

  public void setGenreCode(String genreCode) {
    this.genreCode = genreCode;
  }

  public SpanishPointCoreBDOEntitiesWorkWork musicArrangement(String musicArrangement) {
    this.musicArrangement = musicArrangement;
    return this;
  }

   /**
   * Get musicArrangement
   * @return musicArrangement
  **/
  @Schema(description = "")
  public String getMusicArrangement() {
    return musicArrangement;
  }

  public void setMusicArrangement(String musicArrangement) {
    this.musicArrangement = musicArrangement;
  }

  public SpanishPointCoreBDOEntitiesWorkWork lyricAdaptation(String lyricAdaptation) {
    this.lyricAdaptation = lyricAdaptation;
    return this;
  }

   /**
   * Get lyricAdaptation
   * @return lyricAdaptation
  **/
  @Schema(description = "")
  public String getLyricAdaptation() {
    return lyricAdaptation;
  }

  public void setLyricAdaptation(String lyricAdaptation) {
    this.lyricAdaptation = lyricAdaptation;
  }

  public SpanishPointCoreBDOEntitiesWorkWork distributionCategoryCode(String distributionCategoryCode) {
    this.distributionCategoryCode = distributionCategoryCode;
    return this;
  }

   /**
   * Get distributionCategoryCode
   * @return distributionCategoryCode
  **/
  @Schema(description = "")
  public String getDistributionCategoryCode() {
    return distributionCategoryCode;
  }

  public void setDistributionCategoryCode(String distributionCategoryCode) {
    this.distributionCategoryCode = distributionCategoryCode;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isGrandRights(Boolean isGrandRights) {
    this.isGrandRights = isGrandRights;
    return this;
  }

   /**
   * Get isGrandRights
   * @return isGrandRights
  **/
  @Schema(description = "")
  public Boolean isIsGrandRights() {
    return isGrandRights;
  }

  public void setIsGrandRights(Boolean isGrandRights) {
    this.isGrandRights = isGrandRights;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isLibraryWork(Boolean isLibraryWork) {
    this.isLibraryWork = isLibraryWork;
    return this;
  }

   /**
   * Get isLibraryWork
   * @return isLibraryWork
  **/
  @Schema(description = "")
  public Boolean isIsLibraryWork() {
    return isLibraryWork;
  }

  public void setIsLibraryWork(Boolean isLibraryWork) {
    this.isLibraryWork = isLibraryWork;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isCommissionedForCommercial(Boolean isCommissionedForCommercial) {
    this.isCommissionedForCommercial = isCommissionedForCommercial;
    return this;
  }

   /**
   * Get isCommissionedForCommercial
   * @return isCommissionedForCommercial
  **/
  @Schema(description = "")
  public Boolean isIsCommissionedForCommercial() {
    return isCommissionedForCommercial;
  }

  public void setIsCommissionedForCommercial(Boolean isCommissionedForCommercial) {
    this.isCommissionedForCommercial = isCommissionedForCommercial;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isFilmTVCommissioned(Boolean isFilmTVCommissioned) {
    this.isFilmTVCommissioned = isFilmTVCommissioned;
    return this;
  }

   /**
   * Get isFilmTVCommissioned
   * @return isFilmTVCommissioned
  **/
  @Schema(description = "")
  public Boolean isIsFilmTVCommissioned() {
    return isFilmTVCommissioned;
  }

  public void setIsFilmTVCommissioned(Boolean isFilmTVCommissioned) {
    this.isFilmTVCommissioned = isFilmTVCommissioned;
  }

  public SpanishPointCoreBDOEntitiesWorkWork medleyType(String medleyType) {
    this.medleyType = medleyType;
    return this;
  }

   /**
   * Get medleyType
   * @return medleyType
  **/
  @Schema(description = "")
  public String getMedleyType() {
    return medleyType;
  }

  public void setMedleyType(String medleyType) {
    this.medleyType = medleyType;
  }

  public SpanishPointCoreBDOEntitiesWorkWork isRemix(Boolean isRemix) {
    this.isRemix = isRemix;
    return this;
  }

   /**
   * Get isRemix
   * @return isRemix
  **/
  @Schema(description = "")
  public Boolean isIsRemix() {
    return isRemix;
  }

  public void setIsRemix(Boolean isRemix) {
    this.isRemix = isRemix;
  }

  public SpanishPointCoreBDOEntitiesWorkWork sourceIP(Long sourceIP) {
    this.sourceIP = sourceIP;
    return this;
  }

   /**
   * Get sourceIP
   * @return sourceIP
  **/
  @Schema(description = "")
  public Long getSourceIP() {
    return sourceIP;
  }

  public void setSourceIP(Long sourceIP) {
    this.sourceIP = sourceIP;
  }

  public SpanishPointCoreBDOEntitiesWorkWork sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public SpanishPointCoreBDOEntitiesWorkWork originalWorkNumber(AllOfSpanishPointCoreBDOEntitiesWorkWorkOriginalWorkNumber originalWorkNumber) {
    this.originalWorkNumber = originalWorkNumber;
    return this;
  }

   /**
   * Get originalWorkNumber
   * @return originalWorkNumber
  **/
  @Schema(description = "")
  public AllOfSpanishPointCoreBDOEntitiesWorkWorkOriginalWorkNumber getOriginalWorkNumber() {
    return originalWorkNumber;
  }

  public void setOriginalWorkNumber(AllOfSpanishPointCoreBDOEntitiesWorkWorkOriginalWorkNumber originalWorkNumber) {
    this.originalWorkNumber = originalWorkNumber;
  }

  public SpanishPointCoreBDOEntitiesWorkWork instrumentation(List<SpanishPointCoreBDOEntitiesWorkWorkInstrumentation> instrumentation) {
    this.instrumentation = instrumentation;
    return this;
  }

  public SpanishPointCoreBDOEntitiesWorkWork addInstrumentationItem(SpanishPointCoreBDOEntitiesWorkWorkInstrumentation instrumentationItem) {
    if (this.instrumentation == null) {
      this.instrumentation = new ArrayList<SpanishPointCoreBDOEntitiesWorkWorkInstrumentation>();
    }
    this.instrumentation.add(instrumentationItem);
    return this;
  }

   /**
   * Get instrumentation
   * @return instrumentation
  **/
  @Schema(description = "")
  public List<SpanishPointCoreBDOEntitiesWorkWorkInstrumentation> getInstrumentation() {
    return instrumentation;
  }

  public void setInstrumentation(List<SpanishPointCoreBDOEntitiesWorkWorkInstrumentation> instrumentation) {
    this.instrumentation = instrumentation;
  }

  public SpanishPointCoreBDOEntitiesWorkWork hasOpenWorkflow(Boolean hasOpenWorkflow) {
    this.hasOpenWorkflow = hasOpenWorkflow;
    return this;
  }

   /**
   * Get hasOpenWorkflow
   * @return hasOpenWorkflow
  **/
  @Schema(description = "")
  public Boolean isHasOpenWorkflow() {
    return hasOpenWorkflow;
  }

  public void setHasOpenWorkflow(Boolean hasOpenWorkflow) {
    this.hasOpenWorkflow = hasOpenWorkflow;
  }

  public SpanishPointCoreBDOEntitiesWorkWork independentWorkNumberMatch(Boolean independentWorkNumberMatch) {
    this.independentWorkNumberMatch = independentWorkNumberMatch;
    return this;
  }

   /**
   * Get independentWorkNumberMatch
   * @return independentWorkNumberMatch
  **/
  @Schema(description = "")
  public Boolean isIndependentWorkNumberMatch() {
    return independentWorkNumberMatch;
  }

  public void setIndependentWorkNumberMatch(Boolean independentWorkNumberMatch) {
    this.independentWorkNumberMatch = independentWorkNumberMatch;
  }

  public SpanishPointCoreBDOEntitiesWorkWork skipStandardizedTitleSearch(Boolean skipStandardizedTitleSearch) {
    this.skipStandardizedTitleSearch = skipStandardizedTitleSearch;
    return this;
  }

   /**
   * Get skipStandardizedTitleSearch
   * @return skipStandardizedTitleSearch
  **/
  @Schema(description = "")
  public Boolean isSkipStandardizedTitleSearch() {
    return skipStandardizedTitleSearch;
  }

  public void setSkipStandardizedTitleSearch(Boolean skipStandardizedTitleSearch) {
    this.skipStandardizedTitleSearch = skipStandardizedTitleSearch;
  }

  public SpanishPointCoreBDOEntitiesWorkWork workSourceIP(AllOfSpanishPointCoreBDOEntitiesWorkWorkWorkSourceIP workSourceIP) {
    this.workSourceIP = workSourceIP;
    return this;
  }

   /**
   * Get workSourceIP
   * @return workSourceIP
  **/
  @Schema(description = "")
  public AllOfSpanishPointCoreBDOEntitiesWorkWorkWorkSourceIP getWorkSourceIP() {
    return workSourceIP;
  }

  public void setWorkSourceIP(AllOfSpanishPointCoreBDOEntitiesWorkWorkWorkSourceIP workSourceIP) {
    this.workSourceIP = workSourceIP;
  }

  public SpanishPointCoreBDOEntitiesWorkWork error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @Schema(description = "")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpanishPointCoreBDOEntitiesWorkWork spanishPointCoreBDOEntitiesWorkWork = (SpanishPointCoreBDOEntitiesWorkWork) o;
    return Objects.equals(this.id, spanishPointCoreBDOEntitiesWorkWork.id) &&
        Objects.equals(this.source, spanishPointCoreBDOEntitiesWorkWork.source) &&
        Objects.equals(this.subSource, spanishPointCoreBDOEntitiesWorkWork.subSource) &&
        Objects.equals(this.standardizedTitle, spanishPointCoreBDOEntitiesWorkWork.standardizedTitle) &&
        Objects.equals(this.titles, spanishPointCoreBDOEntitiesWorkWork.titles) &&
        Objects.equals(this.contributors, spanishPointCoreBDOEntitiesWorkWork.contributors) &&
        Objects.equals(this.artists, spanishPointCoreBDOEntitiesWorkWork.artists) &&
        Objects.equals(this.numbers, spanishPointCoreBDOEntitiesWorkWork.numbers) &&
        Objects.equals(this.disambiguateFromNumbers, spanishPointCoreBDOEntitiesWorkWork.disambiguateFromNumbers) &&
        Objects.equals(this.notes, spanishPointCoreBDOEntitiesWorkWork.notes) &&
        Objects.equals(this.territorySpecificInfo, spanishPointCoreBDOEntitiesWorkWork.territorySpecificInfo) &&
        Objects.equals(this.skipContributorCountRules, spanishPointCoreBDOEntitiesWorkWork.skipContributorCountRules) &&
        Objects.equals(this.excludeMatchesOTBelowSimilarity, spanishPointCoreBDOEntitiesWorkWork.excludeMatchesOTBelowSimilarity) &&
        Objects.equals(this.excludeInEligibleWorks, spanishPointCoreBDOEntitiesWorkWork.excludeInEligibleWorks) &&
        Objects.equals(this.workBatchID, spanishPointCoreBDOEntitiesWorkWork.workBatchID) &&
        Objects.equals(this.stampID, spanishPointCoreBDOEntitiesWorkWork.stampID) &&
        Objects.equals(this.isDramaticoMusical, spanishPointCoreBDOEntitiesWorkWork.isDramaticoMusical) &&
        Objects.equals(this.medleyCount, spanishPointCoreBDOEntitiesWorkWork.medleyCount) &&
        Objects.equals(this.dateCreated, spanishPointCoreBDOEntitiesWorkWork.dateCreated) &&
        Objects.equals(this.lastModifiedDate, spanishPointCoreBDOEntitiesWorkWork.lastModifiedDate) &&
        Objects.equals(this.duration, spanishPointCoreBDOEntitiesWorkWork.duration) &&
        Objects.equals(this.draftSubmitted, spanishPointCoreBDOEntitiesWorkWork.draftSubmitted) &&
        Objects.equals(this.isAdUse, spanishPointCoreBDOEntitiesWorkWork.isAdUse) &&
        Objects.equals(this.isMaintained, spanishPointCoreBDOEntitiesWorkWork.isMaintained) &&
        Objects.equals(this.isDistribution, spanishPointCoreBDOEntitiesWorkWork.isDistribution) &&
        Objects.equals(this.isOriginalWork, spanishPointCoreBDOEntitiesWorkWork.isOriginalWork) &&
        Objects.equals(this.sourceSociety, spanishPointCoreBDOEntitiesWorkWork.sourceSociety) &&
        Objects.equals(this.genreCode, spanishPointCoreBDOEntitiesWorkWork.genreCode) &&
        Objects.equals(this.musicArrangement, spanishPointCoreBDOEntitiesWorkWork.musicArrangement) &&
        Objects.equals(this.lyricAdaptation, spanishPointCoreBDOEntitiesWorkWork.lyricAdaptation) &&
        Objects.equals(this.distributionCategoryCode, spanishPointCoreBDOEntitiesWorkWork.distributionCategoryCode) &&
        Objects.equals(this.isGrandRights, spanishPointCoreBDOEntitiesWorkWork.isGrandRights) &&
        Objects.equals(this.isLibraryWork, spanishPointCoreBDOEntitiesWorkWork.isLibraryWork) &&
        Objects.equals(this.isCommissionedForCommercial, spanishPointCoreBDOEntitiesWorkWork.isCommissionedForCommercial) &&
        Objects.equals(this.isFilmTVCommissioned, spanishPointCoreBDOEntitiesWorkWork.isFilmTVCommissioned) &&
        Objects.equals(this.medleyType, spanishPointCoreBDOEntitiesWorkWork.medleyType) &&
        Objects.equals(this.isRemix, spanishPointCoreBDOEntitiesWorkWork.isRemix) &&
        Objects.equals(this.sourceIP, spanishPointCoreBDOEntitiesWorkWork.sourceIP) &&
        Objects.equals(this.sourceType, spanishPointCoreBDOEntitiesWorkWork.sourceType) &&
        Objects.equals(this.originalWorkNumber, spanishPointCoreBDOEntitiesWorkWork.originalWorkNumber) &&
        Objects.equals(this.instrumentation, spanishPointCoreBDOEntitiesWorkWork.instrumentation) &&
        Objects.equals(this.hasOpenWorkflow, spanishPointCoreBDOEntitiesWorkWork.hasOpenWorkflow) &&
        Objects.equals(this.independentWorkNumberMatch, spanishPointCoreBDOEntitiesWorkWork.independentWorkNumberMatch) &&
        Objects.equals(this.skipStandardizedTitleSearch, spanishPointCoreBDOEntitiesWorkWork.skipStandardizedTitleSearch) &&
        Objects.equals(this.workSourceIP, spanishPointCoreBDOEntitiesWorkWork.workSourceIP) &&
        Objects.equals(this.error, spanishPointCoreBDOEntitiesWorkWork.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, source, subSource, standardizedTitle, titles, contributors, artists, numbers, disambiguateFromNumbers, notes, territorySpecificInfo, skipContributorCountRules, excludeMatchesOTBelowSimilarity, excludeInEligibleWorks, workBatchID, stampID, isDramaticoMusical, medleyCount, dateCreated, lastModifiedDate, duration, draftSubmitted, isAdUse, isMaintained, isDistribution, isOriginalWork, sourceSociety, genreCode, musicArrangement, lyricAdaptation, distributionCategoryCode, isGrandRights, isLibraryWork, isCommissionedForCommercial, isFilmTVCommissioned, medleyType, isRemix, sourceIP, sourceType, originalWorkNumber, instrumentation, hasOpenWorkflow, independentWorkNumberMatch, skipStandardizedTitleSearch, workSourceIP, error);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpanishPointCoreBDOEntitiesWorkWork {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    subSource: ").append(toIndentedString(subSource)).append("\n");
    sb.append("    standardizedTitle: ").append(toIndentedString(standardizedTitle)).append("\n");
    sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
    sb.append("    contributors: ").append(toIndentedString(contributors)).append("\n");
    sb.append("    artists: ").append(toIndentedString(artists)).append("\n");
    sb.append("    numbers: ").append(toIndentedString(numbers)).append("\n");
    sb.append("    disambiguateFromNumbers: ").append(toIndentedString(disambiguateFromNumbers)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    territorySpecificInfo: ").append(toIndentedString(territorySpecificInfo)).append("\n");
    sb.append("    skipContributorCountRules: ").append(toIndentedString(skipContributorCountRules)).append("\n");
    sb.append("    excludeMatchesOTBelowSimilarity: ").append(toIndentedString(excludeMatchesOTBelowSimilarity)).append("\n");
    sb.append("    excludeInEligibleWorks: ").append(toIndentedString(excludeInEligibleWorks)).append("\n");
    sb.append("    workBatchID: ").append(toIndentedString(workBatchID)).append("\n");
    sb.append("    stampID: ").append(toIndentedString(stampID)).append("\n");
    sb.append("    isDramaticoMusical: ").append(toIndentedString(isDramaticoMusical)).append("\n");
    sb.append("    medleyCount: ").append(toIndentedString(medleyCount)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    draftSubmitted: ").append(toIndentedString(draftSubmitted)).append("\n");
    sb.append("    isAdUse: ").append(toIndentedString(isAdUse)).append("\n");
    sb.append("    isMaintained: ").append(toIndentedString(isMaintained)).append("\n");
    sb.append("    isDistribution: ").append(toIndentedString(isDistribution)).append("\n");
    sb.append("    isOriginalWork: ").append(toIndentedString(isOriginalWork)).append("\n");
    sb.append("    sourceSociety: ").append(toIndentedString(sourceSociety)).append("\n");
    sb.append("    genreCode: ").append(toIndentedString(genreCode)).append("\n");
    sb.append("    musicArrangement: ").append(toIndentedString(musicArrangement)).append("\n");
    sb.append("    lyricAdaptation: ").append(toIndentedString(lyricAdaptation)).append("\n");
    sb.append("    distributionCategoryCode: ").append(toIndentedString(distributionCategoryCode)).append("\n");
    sb.append("    isGrandRights: ").append(toIndentedString(isGrandRights)).append("\n");
    sb.append("    isLibraryWork: ").append(toIndentedString(isLibraryWork)).append("\n");
    sb.append("    isCommissionedForCommercial: ").append(toIndentedString(isCommissionedForCommercial)).append("\n");
    sb.append("    isFilmTVCommissioned: ").append(toIndentedString(isFilmTVCommissioned)).append("\n");
    sb.append("    medleyType: ").append(toIndentedString(medleyType)).append("\n");
    sb.append("    isRemix: ").append(toIndentedString(isRemix)).append("\n");
    sb.append("    sourceIP: ").append(toIndentedString(sourceIP)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    originalWorkNumber: ").append(toIndentedString(originalWorkNumber)).append("\n");
    sb.append("    instrumentation: ").append(toIndentedString(instrumentation)).append("\n");
    sb.append("    hasOpenWorkflow: ").append(toIndentedString(hasOpenWorkflow)).append("\n");
    sb.append("    independentWorkNumberMatch: ").append(toIndentedString(independentWorkNumberMatch)).append("\n");
    sb.append("    skipStandardizedTitleSearch: ").append(toIndentedString(skipStandardizedTitleSearch)).append("\n");
    sb.append("    workSourceIP: ").append(toIndentedString(workSourceIP)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
