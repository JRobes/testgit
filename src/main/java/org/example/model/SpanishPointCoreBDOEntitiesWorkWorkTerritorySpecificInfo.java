/*
 * API
 * Matching Engine Web Rules API
 *
 * OpenAPI spec version: v1
 * Contact: support@spanishpoint.ie
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.example.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-04T19:50:41.548694176+02:00[Europe/Madrid]")

public class SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo {
  @SerializedName("setTypeGroup")
  private String setTypeGroup = null;

  @SerializedName("workStatus")
  private String workStatus = null;

  @SerializedName("workSubStatus")
  private String workSubStatus = null;

  @SerializedName("isOutOfCopyright")
  private Boolean isOutOfCopyright = null;

  @SerializedName("isControlledComposition")
  private Boolean isControlledComposition = null;

  @SerializedName("isPCSpecific")
  private Boolean isPCSpecific = null;

  @SerializedName("isPDArrangement")
  private Boolean isPDArrangement = null;

  @SerializedName("isNonRoyaltyBearing")
  private Boolean isNonRoyaltyBearing = null;

  @SerializedName("validForUsageFrom")
  private String validForUsageFrom = null;

  @SerializedName("validForUsageTo")
  private String validForUsageTo = null;

  @SerializedName("domesticOrForeign")
  private String domesticOrForeign = null;

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo setTypeGroup(String setTypeGroup) {
    this.setTypeGroup = setTypeGroup;
    return this;
  }

   /**
   * Get setTypeGroup
   * @return setTypeGroup
  **/
  @Schema(description = "")
  public String getSetTypeGroup() {
    return setTypeGroup;
  }

  public void setSetTypeGroup(String setTypeGroup) {
    this.setTypeGroup = setTypeGroup;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo workStatus(String workStatus) {
    this.workStatus = workStatus;
    return this;
  }

   /**
   * Get workStatus
   * @return workStatus
  **/
  @Schema(description = "")
  public String getWorkStatus() {
    return workStatus;
  }

  public void setWorkStatus(String workStatus) {
    this.workStatus = workStatus;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo workSubStatus(String workSubStatus) {
    this.workSubStatus = workSubStatus;
    return this;
  }

   /**
   * Get workSubStatus
   * @return workSubStatus
  **/
  @Schema(description = "")
  public String getWorkSubStatus() {
    return workSubStatus;
  }

  public void setWorkSubStatus(String workSubStatus) {
    this.workSubStatus = workSubStatus;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo isOutOfCopyright(Boolean isOutOfCopyright) {
    this.isOutOfCopyright = isOutOfCopyright;
    return this;
  }

   /**
   * Get isOutOfCopyright
   * @return isOutOfCopyright
  **/
  @Schema(description = "")
  public Boolean isIsOutOfCopyright() {
    return isOutOfCopyright;
  }

  public void setIsOutOfCopyright(Boolean isOutOfCopyright) {
    this.isOutOfCopyright = isOutOfCopyright;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo isControlledComposition(Boolean isControlledComposition) {
    this.isControlledComposition = isControlledComposition;
    return this;
  }

   /**
   * Get isControlledComposition
   * @return isControlledComposition
  **/
  @Schema(description = "")
  public Boolean isIsControlledComposition() {
    return isControlledComposition;
  }

  public void setIsControlledComposition(Boolean isControlledComposition) {
    this.isControlledComposition = isControlledComposition;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo isPCSpecific(Boolean isPCSpecific) {
    this.isPCSpecific = isPCSpecific;
    return this;
  }

   /**
   * Get isPCSpecific
   * @return isPCSpecific
  **/
  @Schema(description = "")
  public Boolean isIsPCSpecific() {
    return isPCSpecific;
  }

  public void setIsPCSpecific(Boolean isPCSpecific) {
    this.isPCSpecific = isPCSpecific;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo isPDArrangement(Boolean isPDArrangement) {
    this.isPDArrangement = isPDArrangement;
    return this;
  }

   /**
   * Get isPDArrangement
   * @return isPDArrangement
  **/
  @Schema(description = "")
  public Boolean isIsPDArrangement() {
    return isPDArrangement;
  }

  public void setIsPDArrangement(Boolean isPDArrangement) {
    this.isPDArrangement = isPDArrangement;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo isNonRoyaltyBearing(Boolean isNonRoyaltyBearing) {
    this.isNonRoyaltyBearing = isNonRoyaltyBearing;
    return this;
  }

   /**
   * Get isNonRoyaltyBearing
   * @return isNonRoyaltyBearing
  **/
  @Schema(description = "")
  public Boolean isIsNonRoyaltyBearing() {
    return isNonRoyaltyBearing;
  }

  public void setIsNonRoyaltyBearing(Boolean isNonRoyaltyBearing) {
    this.isNonRoyaltyBearing = isNonRoyaltyBearing;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo validForUsageFrom(String validForUsageFrom) {
    this.validForUsageFrom = validForUsageFrom;
    return this;
  }

   /**
   * Get validForUsageFrom
   * @return validForUsageFrom
  **/
  @Schema(description = "")
  public String  getValidForUsageFrom() {
    return validForUsageFrom;
  }

  public void setValidForUsageFrom(String  validForUsageFrom) {
    this.validForUsageFrom = validForUsageFrom;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo validForUsageTo(String  validForUsageTo) {
    this.validForUsageTo = validForUsageTo;
    return this;
  }

   /**
   * Get validForUsageTo
   * @return validForUsageTo
  **/
  @Schema(description = "")
  public String getValidForUsageTo() {
    return validForUsageTo;
  }

  public void setValidForUsageTo(String validForUsageTo) {
    this.validForUsageTo = validForUsageTo;
  }

  public SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo domesticOrForeign(String domesticOrForeign) {
    this.domesticOrForeign = domesticOrForeign;
    return this;
  }

   /**
   * Get domesticOrForeign
   * @return domesticOrForeign
  **/
  @Schema(description = "")
  public String getDomesticOrForeign() {
    return domesticOrForeign;
  }

  public void setDomesticOrForeign(String domesticOrForeign) {
    this.domesticOrForeign = domesticOrForeign;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo = (SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo) o;
    return Objects.equals(this.setTypeGroup, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.setTypeGroup) &&
        Objects.equals(this.workStatus, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.workStatus) &&
        Objects.equals(this.workSubStatus, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.workSubStatus) &&
        Objects.equals(this.isOutOfCopyright, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.isOutOfCopyright) &&
        Objects.equals(this.isControlledComposition, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.isControlledComposition) &&
        Objects.equals(this.isPCSpecific, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.isPCSpecific) &&
        Objects.equals(this.isPDArrangement, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.isPDArrangement) &&
        Objects.equals(this.isNonRoyaltyBearing, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.isNonRoyaltyBearing) &&
        Objects.equals(this.validForUsageFrom, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.validForUsageFrom) &&
        Objects.equals(this.validForUsageTo, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.validForUsageTo) &&
        Objects.equals(this.domesticOrForeign, spanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo.domesticOrForeign);
  }

  @Override
  public int hashCode() {
    return Objects.hash(setTypeGroup, workStatus, workSubStatus, isOutOfCopyright, isControlledComposition, isPCSpecific, isPDArrangement, isNonRoyaltyBearing, validForUsageFrom, validForUsageTo, domesticOrForeign);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpanishPointCoreBDOEntitiesWorkWorkTerritorySpecificInfo {\n");
    
    sb.append("    setTypeGroup: ").append(toIndentedString(setTypeGroup)).append("\n");
    sb.append("    workStatus: ").append(toIndentedString(workStatus)).append("\n");
    sb.append("    workSubStatus: ").append(toIndentedString(workSubStatus)).append("\n");
    sb.append("    isOutOfCopyright: ").append(toIndentedString(isOutOfCopyright)).append("\n");
    sb.append("    isControlledComposition: ").append(toIndentedString(isControlledComposition)).append("\n");
    sb.append("    isPCSpecific: ").append(toIndentedString(isPCSpecific)).append("\n");
    sb.append("    isPDArrangement: ").append(toIndentedString(isPDArrangement)).append("\n");
    sb.append("    isNonRoyaltyBearing: ").append(toIndentedString(isNonRoyaltyBearing)).append("\n");
    sb.append("    validForUsageFrom: ").append(toIndentedString(validForUsageFrom)).append("\n");
    sb.append("    validForUsageTo: ").append(toIndentedString(validForUsageTo)).append("\n");
    sb.append("    domesticOrForeign: ").append(toIndentedString(domesticOrForeign)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
